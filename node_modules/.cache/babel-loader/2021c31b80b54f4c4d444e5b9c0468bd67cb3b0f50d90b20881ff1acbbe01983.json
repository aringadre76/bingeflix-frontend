{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arin Gadre\\\\OneDrive\\\\Documents\\\\CSE 115A\\\\cse115afinalproject\\\\Front-End\\\\website-front-end\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\nimport WatchlistPage from './WatchlistPage';\nimport SportsPage from './SportsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchUserMovies = async () => {\n  const url = 'http://localhost:4000/getUserMovies';\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n        // Include authentication tokens if needed, for example:\n        // 'Authorization': 'Bearer yourTokenHere'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('Full response data:', data); // This will log the full data object\n\n    // If you want to see the movies array in a readable format:\n    console.log('Movies array:', data.movies); // Log the movies array directly\n    console.log('Movies array as string:', JSON.stringify(data.movies, null, 2)); // Pretty print the movies array\n\n    return data.movies; // Assuming the movies are correctly located under the 'movies' key\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return []; // Return empty array on error\n  }\n};\nconst fetchUserRecs = async (update = false) => {\n  const url = update ? 'http://localhost:4000/getUserRecs?update=true' : 'http://localhost:4000/getUserRecs';\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.recs;\n  } catch (error) {\n    console.error('Error fetching recommendations:', error);\n    return [];\n  }\n};\nconst removeMovie = async movieTitle => {\n  const url = 'http://localhost:4000/removeMovie';\n  const data = {\n    movieTitle\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nconst Home = () => {\n  _s();\n  //const data = fetchUserMovies();\n  //let data = fetchUserMovies();\n  //console.log('data: ' + data);\n  const [watchlist, setWatchlist] = useState([\n    // { title: 'Blade Runner', type: 'Movie', image: 'https://m.media-amazon.com/images/M/MV5BNzA1Njg4NzYxOV5BMl5BanBnXkFtZTgwODk5NjU3MzI@._V1_.jpg', url: 'https://www.amazon.com/Blade-Runner-Harrison-Ford/dp/B000SW4DLM' },\n    // { title: 'Adventure Time', type: 'Show', image: 'https://resizing.flixster.com/p4bNRltTA96oMxss5CJVBj0YvSU=/ems.cHJkLWVtcy1hc3NldHMvdHZzZXJpZXMvUlRUVjIwNDEwMy53ZWJw', url: 'https://www.cartoonnetwork.com/video/adventure-time/index.html' },\n  ]);\n  useEffect(() => {\n    console.log(\"first\");\n    fetchUserMovies().then(movies => {\n      console.log(\"uno\");\n      if (Array.isArray(movies)) {\n        console.log(\"twice\");\n        setWatchlist(currentWatchlist => {\n          console.log(\"thrice\");\n          const currentTitles = new Set(currentWatchlist.map(item => item.title));\n          const newMovies = movies.filter(movie => !currentTitles.has(movie.title));\n          return [...currentWatchlist, ...newMovies.map(movie => ({\n            title: movie.title,\n            type: 'movie',\n            image: movie.image || '',\n            url: movie.link\n          }))];\n        });\n      } else {\n        console.error('Expected movies to be an array, received:', movies);\n      }\n    });\n  }, []);\n  const [recsList, setRecsList] = useState([]);\n  const [initialFetch, setInitialFetch] = useState(false);\n\n  // Recommendations\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      try {\n        const movies = await fetchUserRecs(initialFetch);\n        if (movies.length === 0 && !initialFetch) {\n          // If no recommendations and this is the first fetch, fetch updated recommendations\n          const updatedMovies = await fetchUserRecs(true);\n          if (Array.isArray(updatedMovies)) {\n            setRecsList(updatedMovies.map(movie => ({\n              title: movie.title,\n              url: movie.link\n            })));\n          } else {\n            console.error('Expected recommendations to be an array, received:', updatedMovies);\n          }\n        } else {\n          if (Array.isArray(movies)) {\n            setRecsList(movies.map(movie => ({\n              title: movie.title,\n              url: movie.link\n            })));\n          } else {\n            console.error('Expected recommendations to be an array, received:', movies);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching recommendations:', error);\n      } finally {\n        setInitialFetch(true); // Mark the initial render as completed\n      }\n    };\n    if (!initialFetch) {\n      fetchRecommendations();\n    }\n  }, [initialFetch]);\n  const addToWatchlist = async ({\n    title,\n    type,\n    image,\n    url\n  }) => {\n    const item = {\n      title,\n      type,\n      image,\n      url\n    };\n    setWatchlist(prevWatchlist => [...prevWatchlist, item]);\n\n    // Fetch updated recommendations\n    const updatedRecs = await fetchUserRecs(true);\n    setRecsList(updatedRecs);\n  };\n  const deleteItem = async item => {\n    const index = watchlist.indexOf(item);\n    if (index !== -1) {\n      console.log(\"Deleting item:\", item); // Log the item that is about to be deleted\n\n      // Call the removeMovie API to delete the movie from the database\n      try {\n        const result = await removeMovie(item.title);\n        if (result && result.success) {\n          console.log(\"Movie removed successfully from backend:\", result.message);\n\n          // Only update the local state if the backend update was successful\n          const newWatchlist = watchlist.filter((_, i) => i !== index);\n          setWatchlist(newWatchlist);\n        } else {\n          console.log(\"Failed to remove the movie from the backend.\");\n        }\n      } catch (error) {\n        console.error(\"Error removing movie from backend:\", error);\n      }\n    }\n  };\n  const images = [\"/dune2.webp\", \"/panda.webp\", \"/kong.webp\"];\n  const descriptions = [\"Paul Atreides unites with Chani and the Fremen while seeking revenge against the conspirators who destroyed his family. Facing a choice between the love of his life and the fate of the universe, he must prevent a terrible future only he can foresee.\", \"Po must train a new warrior when he's chosen to become the spiritual leader of the Valley of Peace. However, when a powerful shape-shifting sorceress sets her eyes on his Staff of Wisdom, he suddenly realizes he's going to need some help. Teaming up with a quick-witted corsac fox, Po soon discovers that heroes can be found in the most unexpected places.\", \"Godzilla and the almighty Kong face a colossal threat hidden deep within the planet, challenging their very existence and the survival of the human race.\"];\n  const titles = [\"Dune 2\", \"Kung Fu Panda 4\", \"Gozilla x Kong: The New Empire\"];\n  const [currentImage, setCurrentImage] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImage(prev => (prev + 1) % images.length);\n    }, 7000);\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, [images.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative grid grid-rows-7 gap-1 bg-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        addToWatchlist: addToWatchlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative row-span-4 bg-cover bg-center\",\n        children: [\" \", images.map((src, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute w-full h-full ${index === currentImage ? 'visible' : 'hidden'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: src,\n            alt: `Image ${index + 1}`,\n            className: \"w-full h-full object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-0 left-0 w-full h-full bg-black opacity-60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute z-60 text-white font-bold text-l\",\n          style: {\n            bottom: '400px',\n            left: '100px'\n          },\n          children: descriptions[currentImage]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute z-60 text-white font-bold text-4xl\",\n          style: {\n            bottom: '500px',\n            left: '100px'\n          },\n          children: titles[currentImage]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"z-60 absolute bg-white text-xl font-bold w-32 h-12 \",\n          style: {\n            fontFamily: \"monospace\",\n            top: '400px',\n            left: '100px',\n            borderRadius: '10px'\n          },\n          children: \"Watch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"z-60 absolute bg-gray-600 text-xl font-bold text-gray-200 w-32 h-12\",\n          style: {\n            top: '400px',\n            left: '250px',\n            borderRadius: '10px'\n          },\n          children: \"More Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-screen text-black bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl font-bold\",\n            children: \"Watchlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WatchlistPage, {\n            watchlist: watchlist,\n            addToWatchlist: addToWatchlist,\n            deleteItem: deleteItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-screen text-black bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl font-bold\",\n            children: \"Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WatchlistPage, {\n            watchlist: recsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SportsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"Bd71uHA3+JJqC5hE649z2tTYTKQ=\");\n_c = Home;\nexport default Home;\n\n// need to add choice between movie and show\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Footer","Header","WatchlistPage","SportsPage","jsxDEV","_jsxDEV","fetchUserMovies","url","response","fetch","method","headers","ok","Error","status","data","json","console","log","movies","JSON","stringify","error","fetchUserRecs","update","recs","removeMovie","movieTitle","body","result","Home","_s","watchlist","setWatchlist","then","Array","isArray","currentWatchlist","currentTitles","Set","map","item","title","newMovies","filter","movie","has","type","image","link","recsList","setRecsList","initialFetch","setInitialFetch","fetchRecommendations","length","updatedMovies","addToWatchlist","prevWatchlist","updatedRecs","deleteItem","index","indexOf","success","message","newWatchlist","_","i","images","descriptions","titles","currentImage","setCurrentImage","interval","setInterval","prev","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","bottom","left","fontFamily","top","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Arin Gadre/OneDrive/Documents/CSE 115A/cse115afinalproject/Front-End/website-front-end/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport WatchlistPage from './WatchlistPage';\r\nimport SportsPage from './SportsPage';\r\n\r\nconst fetchUserMovies = async () => {\r\n    const url = 'http://localhost:4000/getUserMovies';\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Include authentication tokens if needed, for example:\r\n                // 'Authorization': 'Bearer yourTokenHere'\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Full response data:', data);  // This will log the full data object\r\n\r\n        // If you want to see the movies array in a readable format:\r\n        console.log('Movies array:', data.movies);  // Log the movies array directly\r\n        console.log('Movies array as string:', JSON.stringify(data.movies, null, 2));  // Pretty print the movies array\r\n\r\n        return data.movies;  // Assuming the movies are correctly located under the 'movies' key\r\n    } catch (error) {\r\n        console.error('Error fetching movies:', error);\r\n        return [];  // Return empty array on error\r\n    }\r\n};\r\n\r\nconst fetchUserRecs = async (update = false) => {\r\n    const url = update ? 'http://localhost:4000/getUserRecs?update=true' : 'http://localhost:4000/getUserRecs';\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data.recs;\r\n    } catch (error) {\r\n        console.error('Error fetching recommendations:', error);\r\n        return [];\r\n    }\r\n};\r\n\r\n\r\nconst removeMovie = async (movieTitle) => {\r\n    const url = 'http://localhost:4000/removeMovie';\r\n    const data = {\r\n        movieTitle\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return result;\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n};\r\n\r\n\r\nconst Home = () => {\r\n    //const data = fetchUserMovies();\r\n    //let data = fetchUserMovies();\r\n    //console.log('data: ' + data);\r\n    const [watchlist, setWatchlist] = useState([\r\n       // { title: 'Blade Runner', type: 'Movie', image: 'https://m.media-amazon.com/images/M/MV5BNzA1Njg4NzYxOV5BMl5BanBnXkFtZTgwODk5NjU3MzI@._V1_.jpg', url: 'https://www.amazon.com/Blade-Runner-Harrison-Ford/dp/B000SW4DLM' },\r\n       // { title: 'Adventure Time', type: 'Show', image: 'https://resizing.flixster.com/p4bNRltTA96oMxss5CJVBj0YvSU=/ems.cHJkLWVtcy1hc3NldHMvdHZzZXJpZXMvUlRUVjIwNDEwMy53ZWJw', url: 'https://www.cartoonnetwork.com/video/adventure-time/index.html' },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"first\");\r\n        fetchUserMovies().then(movies => {\r\n            console.log(\"uno\");\r\n            if (Array.isArray(movies)) {\r\n                console.log(\"twice\");\r\n                setWatchlist(currentWatchlist => {\r\n                    console.log(\"thrice\");\r\n                    const currentTitles = new Set(currentWatchlist.map(item => item.title));\r\n                    const newMovies = movies.filter(movie => !currentTitles.has(movie.title));\r\n                    return [\r\n                        ...currentWatchlist,\r\n                        ...newMovies.map(movie => ({\r\n                            title: movie.title,\r\n                            type: 'movie',\r\n                            image: movie.image || '',\r\n                            url: movie.link\r\n                        }))\r\n                    ];\r\n                });\r\n            } else {\r\n                console.error('Expected movies to be an array, received:', movies);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const [recsList, setRecsList] = useState([]);\r\n    const [initialFetch, setInitialFetch] = useState(false);\r\n\r\n    // Recommendations\r\n    useEffect(() => {\r\n        const fetchRecommendations = async () => {\r\n            try {\r\n                const movies = await fetchUserRecs(initialFetch);\r\n                if (movies.length === 0 && !initialFetch) {\r\n                    // If no recommendations and this is the first fetch, fetch updated recommendations\r\n                    const updatedMovies = await fetchUserRecs(true);\r\n                    if (Array.isArray(updatedMovies)) {\r\n                        setRecsList(updatedMovies.map(movie => ({\r\n                            title: movie.title,\r\n                            url: movie.link,\r\n                        })));\r\n                    } else {\r\n                        console.error('Expected recommendations to be an array, received:', updatedMovies);\r\n                    }\r\n                } else {\r\n                    if (Array.isArray(movies)) {\r\n                        setRecsList(movies.map(movie => ({\r\n                            title: movie.title,\r\n                            url: movie.link,\r\n                        })));\r\n                    } else {\r\n                        console.error('Expected recommendations to be an array, received:', movies);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching recommendations:', error);\r\n            } finally {\r\n                setInitialFetch(true); // Mark the initial render as completed\r\n            }\r\n        };\r\n\r\n        if (!initialFetch) {\r\n            fetchRecommendations();\r\n        }\r\n    }, [initialFetch]);\r\n\r\n\r\n    const addToWatchlist = async ({ title, type, image, url }) => {\r\n        const item = { title, type, image, url };\r\n        setWatchlist(prevWatchlist => [...prevWatchlist, item]);\r\n\r\n        // Fetch updated recommendations\r\n        const updatedRecs = await fetchUserRecs(true);\r\n        setRecsList(updatedRecs);\r\n    };\r\n\r\n    const deleteItem = async (item) => {\r\n        const index = watchlist.indexOf(item);\r\n        if (index !== -1) {\r\n            console.log(\"Deleting item:\", item);  // Log the item that is about to be deleted\r\n\r\n            // Call the removeMovie API to delete the movie from the database\r\n            try {\r\n                const result = await removeMovie(item.title);\r\n                if (result && result.success) {\r\n                    console.log(\"Movie removed successfully from backend:\", result.message);\r\n\r\n                    // Only update the local state if the backend update was successful\r\n                    const newWatchlist = watchlist.filter((_, i) => i !== index);\r\n                    setWatchlist(newWatchlist);\r\n                } else {\r\n                    console.log(\"Failed to remove the movie from the backend.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error removing movie from backend:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const images = [\r\n        \"/dune2.webp\",\r\n        \"/panda.webp\",\r\n        \"/kong.webp\"\r\n    ];\r\n\r\n    const descriptions = [\r\n        \"Paul Atreides unites with Chani and the Fremen while seeking revenge against the conspirators who destroyed his family. Facing a choice between the love of his life and the fate of the universe, he must prevent a terrible future only he can foresee.\",\r\n        \"Po must train a new warrior when he's chosen to become the spiritual leader of the Valley of Peace. However, when a powerful shape-shifting sorceress sets her eyes on his Staff of Wisdom, he suddenly realizes he's going to need some help. Teaming up with a quick-witted corsac fox, Po soon discovers that heroes can be found in the most unexpected places.\",\r\n        \"Godzilla and the almighty Kong face a colossal threat hidden deep within the planet, challenging their very existence and the survival of the human race.\"\r\n    ];\r\n\r\n    const titles = [\r\n        \"Dune 2\",\r\n        \"Kung Fu Panda 4\",\r\n        \"Gozilla x Kong: The New Empire\"\r\n    ]\r\n\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentImage((prev) => (prev + 1) % images.length);\r\n        }, 7000);\r\n\r\n        return () => clearInterval(interval); // Cleanup on component unmount\r\n    }, [images.length]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"relative grid grid-rows-7 gap-1 bg-gray-600\">\r\n                <Header addToWatchlist={addToWatchlist} />\r\n                <div className=\"relative row-span-4 bg-cover bg-center\"> {/* Position the overlay here */}\r\n                    {images.map((src, index) => (\r\n                        <div key={index} className={`absolute w-full h-full ${index === currentImage ? 'visible' : 'hidden'}`}>\r\n                            <img\r\n                                src={src}\r\n                                alt={`Image ${index + 1}`}\r\n                                className=\"w-full h-full object-cover\"\r\n                            />\r\n\r\n                            {/* Dark overlay to make the image darker */}\r\n                            <div className=\"absolute top-0 left-0 w-full h-full bg-black opacity-60\"></div>\r\n                        </div>\r\n                    ))}\r\n\r\n\r\n                    {/* Movie Title and Description */}\r\n                    <div className=\"absolute z-60 text-white font-bold text-l\" style={{ bottom: '400px', left: '100px' }}>\r\n                        {descriptions[currentImage]}\r\n                    </div>\r\n                    <div className=\"absolute z-60 text-white font-bold text-4xl\" style={{ bottom: '500px', left: '100px' }}>\r\n                        {titles[currentImage]}\r\n                    </div>\r\n\r\n                    <button\r\n                        className=\"z-60 absolute bg-white text-xl font-bold w-32 h-12 \"\r\n                        style={{ fontFamily: \"monospace\", top: '400px', left: '100px', borderRadius: '10px' }}\r\n                    >\r\n                        Watch\r\n                    </button>\r\n                    <button\r\n                        className=\"z-60 absolute bg-gray-600 text-xl font-bold text-gray-200 w-32 h-12\"\r\n                        style={{ top: '400px', left: '250px', borderRadius: '10px' }}\r\n                    >\r\n                        More Details\r\n                    </button>\r\n                </div>\r\n                {/* Watchlist */}\r\n                \r\n                <div className=\"flex justify-center items-center h-screen text-black bg-white\">\r\n                    <div className=\"text-center\">\r\n                        <p className=\"text-xl font-bold\">Watchlist</p>\r\n                        <WatchlistPage watchlist={watchlist} addToWatchlist={addToWatchlist} deleteItem={deleteItem} />\r\n                    </div>\r\n                </div>\r\n                {/* Recommendations */}\r\n                <div className=\"flex justify-center items-center h-screen text-black bg-white\">\r\n                    <div className=\"text-center\">\r\n                        <p className=\"text-xl font-bold\">Recommendations</p>\r\n                        <WatchlistPage watchlist={recsList} />\r\n                    </div>\r\n                </div>\r\n                {/* Sports */}\r\n                <div>\r\n                    <SportsPage />\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n// need to add choice between movie and show"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}